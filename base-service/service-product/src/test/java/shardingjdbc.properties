logging.level.com.xbz.xdemo.shardingjdbc=debug

# 所有数据源列表
sharding.jdbc.datasource.names=ds_master,ds_slave_0

# 主数据源
sharding.jdbc.datasource.ds_master.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds_master.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds_master.url=jdbc:mysql://localhost:3306/test_write?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
sharding.jdbc.datasource.ds_master.username=root
sharding.jdbc.datasource.ds_master.password=123456

# 从数据源
sharding.jdbc.datasource.ds_slave_0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds_slave_0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds_slave_0.url=jdbc:mysql://localhost:3306/test_read?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
sharding.jdbc.datasource.ds_slave_0.username=root
sharding.jdbc.datasource.ds_slave_0.password=123456

# 读写分离设置
sharding.jdbc.config.sharding.master-slave-rules.ds_0.master-data-source-name=ds_master
sharding.jdbc.config.sharding.master-slave-rules.ds_0.slave-data-source-names=ds_slave_0


# 分表配置
#actual-data-nodes：真实数据节点，由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式
sharding.jdbc.config.sharding.tables.user.actual-data-nodes=ds_0.user_${0..1}

#table-strategy.inline.sharding-column：分表的字段配置
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.sharding-column=user_id
#table-strategy.inline.algorithm-expression：分表的算法表达式(取模 , HASH , 分块等)
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.algorithm-expression=user_${user_id.longValue() % 2}

#自定义分表算法
#sharding.jdbc.config.sharding.tables.user.tableStrategy.standard.sharding-column=name
#sharding.jdbc.config.sharding.tables.user.tableStrategy.standard.preciseAlgorithmClassName=com.xbz.xdemo.shardingjdbc.config.HashPreciseShardingAlgorithm

# MyBatis配置
mybatis.type-aliases-package=com.xdemo.shardingjdbc.entity
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.cache-enabled=false




